//const computePasswordToSha256Hash = (plainText) => {
    // Create a SHA256 hash from string
//    const sha256Hash = crypto.createHash('sha256');

    // Computing Hash - returns here byte array
  //  const bytes = sha256Hash.update(plainText, 'utf8').digest();

    // now convert byte array to a string
    //let stringBuilder = '';
    //for (let i = 0; i < bytes.length; i++) {
       // stringBuilder += bytes[i].toString('hex');
    //}
    //return stringBuilder;
//};

var token= HttpContext.Request.Headers["Authorization"].FirstOrDefault()?.Split(" ").Last();
            var tokenHandler = new JwtSecurityTokenHandler();
            var payload = JsonConvert.SerializeObject(tokenHandler.ReadJwtToken(token).Payload);
            //dynamic PayloadString = JsonConvert.SerializeObject(payload);
            dynamic JsonPayload = JsonConvert.DeserializeObject(payload)!;
            string Role = JsonPayload.Role;